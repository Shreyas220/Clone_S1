{"ast":null,"code":"var _jsxFileName = \"/home/gladium/Desktop/spotify /spotify-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Login from \"./Login\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(null); //run code based on a given condition \n\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      setToken(_token); //giving token to spotify to safety talk to it \n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        console.log(\"user \", user);\n      });\n    }\n\n    console.log(\"I HAVE A TOKEN ->\", token);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: token ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"logged IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eWBIkeOp23ULLKh+dtj8T5F2fVE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gladium/Desktop/spotify /spotify-clone/src/App.js"],"names":["React","useEffect","useState","Login","getTokenFromResponse","SpotifyWebApi","spotify","App","token","setToken","hash","window","location","_token","access_token","setAccessToken","getMe","then","user","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,oBAAT,QAAsC,WAAtC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AAEA,MAAMC,OAAO,GAAG,IAAID,aAAJ,EAAhB;;AAIA,SAASE,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAASC,QAAT,IAAqBP,QAAQ,CAAC,IAAD,CAAnC,CAFa,CAIb;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,IAAI,GAAGN,oBAAoB,EAAjC;AACAO,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AAEA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AACA,QAAID,MAAJ,EAAW;AAETJ,MAAAA,QAAQ,CAAEI,MAAF,CAAR,CAFS,CAIR;;AACAP,MAAAA,OAAO,CAACS,cAAR,CAAuBF,MAAvB;AACAP,MAAAA,OAAO,CAACU,KAAR,GAAgBC,IAAhB,CAAsBC,IAAD,IAAS;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB;AACD,OAFD;AAGF;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCZ,KAAhC;AACD,GAjBQ,EAiBN,EAjBM,CAAT;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAEIA,KAAK,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,gBAGH,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AALN;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAvCQD,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Login from \"./Login\"\nimport { getTokenFromResponse  } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\"\n\nconst spotify = new SpotifyWebApi();\n\n\n\nfunction App() {\n\n  const [token , setToken] = useState(null);\n\n  //run code based on a given condition \n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n\n    const _token = hash.access_token;\n    if( _token){\n     \n      setToken( _token );\n\n       //giving token to spotify to safety talk to it \n       spotify.setAccessToken(_token);\n       spotify.getMe().then((user)=> {\n         console.log(\"user \", user);\n       });\n    }\n\n    console.log(\"I HAVE A TOKEN ->\",token);\n  }, [])\n\n\n\n\n  return (\n    <div className=\"App\">\n      {\n        token ? (\n          <h1>logged IN</h1>\n        ) : (\n          <Login />\n        )\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}